{"version":3,"sources":["components/HomePage.tsx","api.tsx","components/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundpage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","a","fetch","response","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","useEffect","then","peopleFromServer","peopleForTable","personfromServer","mother","find","father","NotFoundPage","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"gPAAaA,EAAqB,kBAChC,oBAAIC,UAAU,QAAd,wB,sDCEWC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,qEADN,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCGTC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,qBAAIP,UAAU,SAAd,UACE,6BAAKO,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,iBCLHC,G,MAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,kCACE,kCACE,sCACA,qCACA,sCACA,sCACA,wCACA,2CAEF,gCACGA,EAAOC,KAAI,SAAAT,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,cChBhBU,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KAqBA,OAnBAC,qBAAU,WACRnB,IAAYoB,MAAK,SAAAC,GACf,IAAMC,EAAiB,YAAID,GACxBN,KAAI,SAAAQ,GACH,OAAO,YAAC,eACHA,GADL,IAEEC,OAAQH,EACLI,MAAK,SAAAnB,GAAM,OAAIiB,EAAiBZ,aAAeL,EAAOC,SACpD,KACLmB,OAAQL,EACLI,MAAK,SAAAnB,GAAM,OAAIiB,EAAiBX,aAAeN,EAAOC,SACpD,UAIXW,EAAUI,QAEX,IAGD,qCACE,oBAAIvB,UAAU,QAAd,yBACA,cAAC,EAAD,CAAae,OAAQA,QC9Bda,EAAyB,kBACpC,oBAAI5B,UAAU,QAAd,6BCmCa6B,EA5BH,kBACV,sBAAK7B,UAAU,MAAf,UACE,iCACE,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CACEA,UAAU,mBACV8B,GAAG,IAFL,kBAMA,cAAC,IAAD,CACE9B,UAAU,mBACV8B,GAAG,UAFL,yBASJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,QAC1C,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,aC1B/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8abced8a.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","/* eslint-disable max-len */\nimport { Person } from './types/Person';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  return response.json();\n};\n","import { Person } from '../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr className=\"Person\">\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName}</td>\n    <td>{person.fatherName}</td>\n  </tr>\n);\n","import { Person } from '../../types/Person';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table>\n      <thead>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const peopleForTable = [...peopleFromServer]\n        .map(personfromServer => {\n          return ({\n            ...personfromServer,\n            mother: peopleFromServer\n              .find(person => personfromServer.motherName === person.name)\n              || null,\n            father: peopleFromServer\n              .find(person => personfromServer.fatherName === person.name)\n              || null,\n          });\n        });\n\n      setPeople(peopleForTable);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Routes, Route, Link, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundpage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <nav className=\"navigation\">\n        <Link\n          className=\"navigation__link\"\n          to=\"/\"\n        >\n          Home\n        </Link>\n        <Link\n          className=\"navigation__link\"\n          to=\"/people\"\n        >\n          People\n        </Link>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}